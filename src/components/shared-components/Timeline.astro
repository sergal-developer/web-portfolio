---
// export interface Props {
//   from: number;
//   level: string;
//   value: number;
// }

let { from, to, projects, institutions } = Astro.props;

let steps = to - from;
let years = [];

for (let i = 0; i <= steps; i++) {
    years.push(from + i);
}

let currentZoom = 100;

const handleZoom = () => {
    console.log('target: ', currentZoom);
}

---

<div class="timeline-zoom-control">
    <div>{ currentZoom }%</div>
    <div> <input type="range" name="zomcontro." id="zoomcontrol" min="1" max="100" value={currentZoom} onChange={handleZoom} > </div>
</div>
<div class="timeline-component">
    
    <div class="timeline-institutions">
        {
            institutions.map((evt, index) => {
                const duration = 'timeline-event-years-' + evt.duration + evt.durationFraction;
                const level = ' timeline-level-' + evt.level;
                const showDetails = evt.showDetails ? ' show-details' : ' ';
                const color = evt.color ? evt.color : '';
                return <div item-event id={evt.id}  class={ duration + level + showDetails + color } timeline-item data-item={ evt.id }>
                    <div class="info">
                        <div class="tle-name">{ evt.name }</div>
                        <div class="tle-period">{ evt.period }</div>
                        <div class="tle-type">{ evt.type }</div>
                        <div class="tle-description" set:html={ evt.description }></div>
                    </div>
                </div>
            })
        }
    </div>
    
    <div class="timeline-events">
        {
            projects.map((evt, index) => {
                const duration = 'timeline-event-years-' + evt.duration + evt.durationFraction;
                const level = ' timeline-level-' + evt.level;
                const showDetails = evt.showDetails ? ' show-details' : ' ';
                const color = evt.color ? evt.color : '';
                return <div item-event id={evt.id}  class={ duration + level + showDetails + color } timeline-item data-item={ evt.id }>
                    <div class="info">
                        <div class="tle-period">{ evt.period }</div>
                        <div class="tle-name">{ evt.name }</div>
                        <div class="tle-type">{ evt.type }</div>
                        <div class="tle-description" set:html={ evt.description }></div>
                    </div>
                </div>
            })
        }
    </div>
    <div class="timelines-years">
        {
            years.map((y) => {
                return <div item-year >{y}</div>;
            })
        }
    </div>
    
</div>
